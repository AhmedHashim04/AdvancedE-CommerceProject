# Generated by Django 5.2.4 on 2025-09-20 00:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('promotions', '0001_initial'),
        ('sellers', '0001_initial'),
        ('shipping', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('hex_code', models.CharField(help_text='مثال: #FFFFFF', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('required_by', models.ForeignKey(blank=True, help_text='Sellers who require this brand', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='required_brands', to='sellers.seller')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='store.category')),
                ('required_by', models.ForeignKey(blank=True, help_text='Sellers who require this category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='required_categories', to='sellers.seller')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('required_by', models.ForeignKey(blank=True, help_text='Sellers who require this tag', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='required_tags', to='sellers.seller')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.TextField(blank=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=255)),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit: unique identifier for the product', max_length=100, null=True, unique=True)),
                ('barcode', models.CharField(blank=True, help_text='Barcode: unique product code for scanning and inventory', max_length=100, null=True, unique=True)),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.PositiveIntegerField(default=5)),
                ('allow_backorder', models.BooleanField(default=False)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='products/main_images/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('view_360_url', models.URLField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('depth', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('has_variants', models.BooleanField(default=False)),
                ('attributes', models.JSONField(blank=True, null=True)),
                ('is_on_sale', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('sales_count', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=2, null=True, verbose_name='Average Rating')),
                ('review_count', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Review Count')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='store.brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='store.category')),
                ('promotion', models.ForeignKey(blank=True, limit_choices_to=models.Q(('is_active', True)), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='promotions.promotion')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='sellers.seller')),
                ('shipping_company', models.ForeignKey(blank=True, help_text='Default shipping company for this product', null=True, on_delete=django.db.models.deletion.SET_NULL, to='shipping.shippingcompany', verbose_name='Default Shipping Company')),
                ('color_options', models.ManyToManyField(blank=True, to='store.productcolor')),
                ('gallery', models.ManyToManyField(blank=True, related_name='product_gallery', to='store.productimage')),
                ('tags', models.ManyToManyField(blank=True, to='store.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
