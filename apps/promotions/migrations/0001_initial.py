# Generated by Django 5.2.4 on 2025-09-01 14:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('points_per_purchase', models.PositiveIntegerField(default=1)),
                ('points_per_currency', models.DecimalField(decimal_places=2, default=0.01, max_digits=5)),
                ('redemption_ratio', models.DecimalField(decimal_places=2, default=0.01, max_digits=5)),
                ('min_redemption_points', models.PositiveIntegerField(default=100)),
                ('Eid_multiplier', models.DecimalField(blank=True, decimal_places=2, default=2.0, max_digits=3, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount'), ('shipping', 'Free Shipping'), ('gift', 'Gift with Purchase'), ('bxgy', 'Buy X Get Y Free (e.g., Buy 5 Get 1 Free)')], max_length=20)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('buy_quantity', models.PositiveIntegerField(blank=True, help_text='Buy X quantity', null=True)),
                ('get_quantity', models.PositiveIntegerField(blank=True, help_text='Get Y quantity', null=True)),
                ('min_quantity', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('min_order_value', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=10, null=True)),
                ('max_usage_per_user', models.PositiveIntegerField(blank=True, null=True)),
                ('max_usage', models.PositiveIntegerField(blank=True, null=True)),
                ('total_uses', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(db_index=True, default=1)),
                ('stackable', models.BooleanField(default=False)),
                ('exclusive_group', models.CharField(blank=True, help_text='Promotions in the same group cannot be combined', max_length=50)),
            ],
            options={
                'ordering': ['-priority'],
            },
        ),
        migrations.CreateModel(
            name='PromotionUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
