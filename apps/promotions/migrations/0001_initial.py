# Generated by Django 5.2.4 on 2025-09-20 00:36

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BQGPromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_to_buy', models.PositiveIntegerField(help_text='Quantity required to activate promotion')),
                ('gift_quantity', models.PositiveIntegerField(help_text='Quantity of free gift')),
                ('percentage_amount', models.PositiveIntegerField(blank=True, help_text='Percentage discount on gift (1-100)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed discount amount applied to total gift price', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('percentage', 'Percentage Discount'), ('fixed', 'Fixed Discount'), ('bqg', 'Buy X Get Y')], help_text='Type of promotion', max_length=20)),
                ('percentage_amount', models.PositiveIntegerField(blank=True, help_text='Percentage discount (1-100)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed discount amount (>0)', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Max number of times this promotion can be used. Null = unlimited.', null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
